//
//package Model
//
//import DataObjects.BaseModelObject
//import android.content.ContentValues.TAG
//import android.util.Log
//import com.google.firebase.database.DatabaseReference
//import com.google.firebase.FirebaseApp
//import com.google.firebase.database.DataSnapshot
//import com.google.firebase.database.DatabaseError
//import com.google.firebase.database.ValueEventListener
//import java.util.*
//
//public class ModelFirebase<T> where T: BaseModelObject {
//
//    var ref:
//            DatabaseReference = ModelFirebaseDatabase.ref
//    var collectionName:String =""
//
//    init {
//        //FirebaseApp.configure()
//
//       //// this.collectionName = T::class.toString()//class.simpleName!! //.components(separatedBy: ".").last!
//    }
//
//    fun getAllRecordsAndObserve(from: Double, callback: (ArrayList<T>)->Void):Void {
//        var stRef = ref.child(this.collectionName)
//        var fbQuery = stRef.orderByChild("lastUpdate").startAt(from)
//
//
//
//
//        // [START basic_query_value_listener]
//        // My top posts by number of stars
//        fbQuery.addValueEventListener(object : ValueEventListener {
//            override fun onDataChange(dataSnapshot: DataSnapshot) {
//                for (postSnapshot in dataSnapshot.children) {
//                    // TODO: handle the post
//                }
//            }
//
//            override fun onCancelled(databaseError: DatabaseError) {
//                // Getting Post failed, log a message
//                Log.w(TAG, "loadPost:onCancelled", databaseError.toException())
//                // ...
//            }
//        })
//        // [END basic_query_value_listener]
//
//
//
//
//        fbQuery.observe(.value) { (snapshot: DatabaseError) in
//                print("fbQuery.observe")
//
//            var data = ArrayList<T>()
////            if let value = snapshot.value as? [String:Any] {
//            var value = this.convertSnapshot2Json(snapshot: DataSnapshot) as ArrayList<String>
//            if (value)  {
//                for (_, json) in value{
//                //let newT = elementType.init(json: json as! [String : Any])
//                data.append(T.init(json: json as! [String : Any]))
//            }
//            }
//            callback(data)
//        }
//    }
//
//    public func convertSnapshot2Json(snapshot:DataSnapshot):[String]
//    {
//
//        var jsonArry:[String:Any] = [String:Any]()
//        var i:Int32=0
//        let enumerator = snapshot.children
//                while let rest = enumerator.nextObject() as? DataSnapshot {
//                    //this is 1 single message here
//                    let values = rest.value as? NSDictionary
//                    var json = [String:Any]()
//                    for (key, value) in values!{
//                    print("Key: \(key), value: \(value)")
//                    json["\(key)"] = value
//                }
//                    i=i+1
//
//                    jsonArry[String(i)] = json
//
//                    // let textUser = values?["id"] as? String ?? "";
//                }
//        return jsonArry
//    }
//
//    public func addNew(instance: T) throws {
//        //let collectionName:String=String(describing: instance).components(separatedBy: ".").last!
//
//        //do {
//        //try
//        //ref.child(collectionName).child(instance.id).setValue(instance.toJson())
//        //} catch {
//        //    print("Unexpected error: \(error).")
//        //}
//        do {
//            try
//                ref.child(collectionName).child(instance.id).setValue(instance.toJson()) {
//                    (error:Error?, ref:DatabaseReference) in
//                    if (error) {
//                        print("Data could not be saved: " + error + ".")
//                    } else {
//                        print("Data saved successfully!")
//                    }
//                }
//
//            } catch ( error:Exception ) {
//                print("Unexpected error: " + (error) + ".")
//            }
//        }
//
//
///*
//        lazy var storageRef = Storage.storage().reference(forURL:        "gs://smartlistios-7a38f.appspot.com")
//
//        public func saveImage(image:UIImage, name:(String),
//        callback:@escaping (String?)->Void){
//            let data = UIImageJPEGRepresentation(image,0.8)
//            let imageRef = storageRef.child(name)
//
//            let metadata = StorageMetadata()
//            metadata.contentType = "image/jpeg"
//
//            imageRef.putData(data!, metadata: metadata) { (metadata, error) in
//            imageRef.downloadURL { (url, error) in
//                guard let downloadURL = url else {
//                    // Uh-oh, an error occurred!
//                    return
//                }
//                print("url: \(downloadURL)")
//                callback(downloadURL.absoluteString)
//            }
//        }
//        }
//
//        public func getImage(url:String, callback:@escaping (UIImage?)->Void){
//            let ref = Storage.storage().reference(forURL: url)
//            ref.getData(maxSize: 10 * 1024 * 1024) { data, error in
//            if error != nil {
//                callback(nil)
//            } else {
//                let image = UIImage(data: data!)
//                callback(image)
//            }
//        }
//        }
//*/
//
//    }